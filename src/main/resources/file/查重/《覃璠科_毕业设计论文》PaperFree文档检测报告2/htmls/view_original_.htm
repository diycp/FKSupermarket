<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperFree最权威中文论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
html
{
overflow-x:hidden;
overflow-y:auto;
}
body,td,th {
font-family: "微软雅黑";
font-size: 12px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
p{
margin-bottom:10px;
}
demo_padding {
line-height: 30px;
}
.zhengwen {
padding-right: 15px;
padding-left: 5px;
padding-bottom:100px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px solid #999999;
padding-right: 10px;
padding-left: 10px;
margin-top:10px;
margin-left:25px;
width:300px;
}
.shubu{
height: 20px;
width: 20px;
margin-left:25px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
color: #666666;
}
a.red:link {color:#FF0000}
a.red:visited {color:#FF0000}
a.red:hover {color:#000000}
a.red:active {color:#000000}

a.orange:link {color:#FF6600}
a.orange:visited {color:#FF6600}
a.orange:hover {color:#000000}
a.orange:active {color:#000000}

a.dark:link {color:#666666}
a.dark:visited {color:#666666}
a.dark:hover {color:#000000}
a.dark:active {color:#000000}

a.pagelink:hover {color:#000000}
a.pagelink:active {color:#000000}

.green{color:#008000}
.gray{color:#666666}
.red{color:#FF0000}
.orange{color:#FF6600}
a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>

<div class="zhengwen">


  <br>
<span style="margin-left:25px"></span> 学    号：   3140757208
<br>
  <br>
<span style="margin-left:25px"></span> 题目类型：     设计
<br>
  <br>
<span style="margin-left:25px"></span> (设计、论文、报告)
<br>
  <br>
<span style="margin-left:25px"></span> 桂林理工大学
<br>
  <br>
<span style="margin-left:25px"></span> GUILIN UNIVERSITY OF TECHNOLOGY
<br>
  <br>
<span style="margin-left:25px"></span> 本科毕业设计(论文)
<br>
  <br>
<span style="margin-left:25px"></span> 题      目：   支持人脸识别的超市
<br>
  <br>
<span style="margin-left:25px"></span> 收银系统研发
<br>
  <br>
<span style="margin-left:25px"></span> 学      院：  信息科学与工程学院
<br>
  <br>
<span style="margin-left:25px"></span> 专业(方向)：        网络工程
<br>
  <br>
<span style="margin-left:25px"></span> 班      级：        2014-2班
<br>
  <br>
<span style="margin-left:25px"></span> 学      生：        覃璠科
<br>
  <br>
<span style="margin-left:25px"></span> 指导教师：        叶恒舟
<br>
  <br>
<span style="margin-left:25px"></span> 2018 年 xx 月 xx
<br>
  <br>
<span style="margin-left:25px"></span> 摘  要
<br>
  <br>
<span style="margin-left:25px"></span> 稍大一些的超市往往具有不少的工作人员，从而具有一个可靠而方便的身份认证方式就显得尤为重要，尤其是超市销售方面，如果没有一个安全可靠的销售收银系统，财务安全将会面临巨大的挑战。因此，具有人脸识别这种可靠性高的身份认证方式可以有效的保证系统的安全性。
<br>
  <br>
<span style="margin-left:25px"></span> 本超市收银系统将采用JSP做为页面文件，基于SSM框架的逻辑实现方式，开发一个功能简便的超市收银系统。可以使用人脸识别和账号密码两种身份认证方式进入系统，此外，超市收银员还可以进行基本的收银操作和给予会员用户商品打折积分，并且可以根据不同用户的角色进行功能的限制。
<br>
  <br>
<span style="margin-left:25px"></span> 此次开发的系统具有刷脸登录和通过Shiro安全框架实现用户身份的认证与授权两大特点，达到了给予用户良好体验的效果。在系统开发中将多数时间用于对人脸识别的研究，对人脸识别有了进一步的了解和掌握，也因此导致其他某些功能存在小小的不足。
<br>
  <br>
<span style="margin-left:25px"></span> 关键词：人脸识别；超市收银；SSM；Shiro；
<br>
  <br>
<span style="margin-left:25px"></span> Supermarket cash register system development for face recognition
<br>
  <br>
<span style="margin-left:25px"></span> Student:QIN Fan-Ke Teacher:YE Heng-Zhou
<br>
  <br>
<span style="margin-left:25px"></span> Abstract: ABCD……………………
<br>
  <br>
<span style="margin-left:25px"></span> ………
<br>
  <br>
<span style="margin-left:25px"></span> ………
<br>
  <br>
<span style="margin-left:25px"></span> Key words: Face recognition; Supermarket cash retister; SSM; Shiro;
<br>
  <br>
<span style="margin-left:25px"></span> 目  次
<br>
  <br>
<span style="margin-left:25px"></span> 摘  要	I
<br>
  <br>
<span style="margin-left:25px"></span> Abstract	II
<br>
  <br>
<span style="margin-left:25px"></span> 1  绪论	1
<br>
  <br>
<span style="margin-left:25px"></span> 1.1 研究意义与背景	1
<br>
  <br>
<span style="margin-left:25px"></span> 1.2 他人工作成果简述	1
<br>
  <br>
<span style="margin-left:25px"></span> 1.3 主要研究内容	2
<br>
  <br>
<span style="margin-left:25px"></span> 1.3.1 研究内容	2
<br>
  <br>
<span style="margin-left:25px"></span> 1.3.2 研究重点	2
<br>
  <br>
<span style="margin-left:25px"></span> 2  需求分析	4
<br>
  <br>
<span style="margin-left:25px"></span> 2.1 功能需求分析	4
<br>
  <br>
<span style="margin-left:25px"></span> 2.2 可行性分析	5
<br>
  <br>
<span style="margin-left:25px"></span> 2.3 开发与运行环境	5
<br>
  <br>
<span style="margin-left:25px"></span> 2.4 相关技术简介	6
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.1 Bootstrap	6
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.2 Spring	6
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.3 SpringMVC	6
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.4 Mybatis	7
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.5 Shiro	7
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.6 百度人脸识别	7
<br>
  <br>
<span style="margin-left:25px"></span> 2.5 相关技术分析	7
<br>
  <br>
<span style="margin-left:25px"></span> 3  概要设计	9
<br>
  <br>
<span style="margin-left:25px"></span> 3.1 数据库设计	9
<br>
  <br>
<span style="margin-left:25px"></span> 3.1.1 数据库表结构分析	9
<br>
  <br>
<span style="margin-left:25px"></span> 3.1.2 数据库表结构设计	11
<br>
  <br>
<span style="margin-left:25px"></span> 3.2 系统结构设计	13
<br>
  <br>
<span style="margin-left:25px"></span> 3.3 文件结构设计	15
<br>
  <br>
<span style="margin-left:25px"></span> 4  详细设计与实现	16
<br>
  <br>
<span style="margin-left:25px"></span> 4.1 用户登录	16
<br>
  <br>
<span style="margin-left:25px"></span> 4.1.1 用户名密码登录	16
<br>
  <br>
<span style="margin-left:25px"></span> 4.1.2 刷脸登录	18
<br>
  <br>
<span style="margin-left:25px"></span> 4.2 前台收银	20
<br>
  <br>
<span style="margin-left:25px"></span> 4.3 商品销售	23
<br>
  <br>
<span style="margin-left:25px"></span> 4.4 商品库存	26
<br>
  <br>
<span style="margin-left:25px"></span> 4.5 营业统计	28
<br>
  <br>
<span style="margin-left:25px"></span> 4.6 人事管理	29
<br>
  <br>
<span style="margin-left:25px"></span> 5  系统测试	31
<br>
  <br>
<span style="margin-left:25px"></span> 5.1 测试环境	31
<br>
  <br>
<span style="margin-left:25px"></span> 5.2 测试方法	31
<br>
  <br>
<span style="margin-left:25px"></span> 5.3 测试用例	31
<br>
  <br>
<span style="margin-left:25px"></span> 6  总结与展望	33
<br>
  <br>
<span style="margin-left:25px"></span> 致  谢	34
<br>
  <br>
<span style="margin-left:25px"></span> 参考文献	35
<br>
  <br>
<span style="margin-left:25px"></span> 1  绪论
<br>
  <br>
<span style="margin-left:25px"></span> 1.1 研究意义与背景
<br>
  <br>
<span style="margin-left:25px"></span> 现如今，服务行业的发展越来越快，并且竞争也越来越激烈，一个中小型的超市怎么样去提高服务质量、管理能力显得越来越重要。如果不使用一个安全可靠的超市管理系统，还是像旧时代那样单凭手工操作，不仅效率低下，而且会极大地影响到超市的服务质量，进一步影响到超市的经济效益。超市为了避免这些缺点，通常会使用一个功能较为完善的软件系统，而不再使用纸和笔来记录，这不仅可以方便、快速、准确的完成顾客的结账需求，还可以提供给超市管理人员重要的销售数据，让管理者能够做出更加正确的销售决策，提供超市的盈利水平。
<br>
  <br>
<span style="margin-left:25px"></span> 比较大型的超市往往不是只有一个收银员，而且收银员的工作内容又关乎超市的经济利益，在当前信息科学技术飞速发展的背景下，保密技术和认证技术是信息安全能够实现的两个关键技术，在某些情况下，认证比保密更重要许多，通过身份认证可以禁止非相关人员进入系统，防止其通过违法操作获取不正当利益。因此，提供一个可靠而方便的收银员身份认证登录方式可以提高超市信息的安全性，人脸识别技术在我们平时的生活中是最为友好方便的快速身份识别方式。综合各方面的因素考虑，给超市的收银系统提供一个刷脸登录方式是很有必要的。
<br>
  <br>
<span style="margin-left:25px"></span> 1.2 他人工作成果简述
<br>
  <br>
<span style="margin-left:25px"></span> 最近几年人脸识别技术的发展迅速，出错率已经降到很小，在一般的应用中已经小到可以忽略的水平，在某些人脸识别软件的测试中，测试数据的准确率达到了人眼的辨识能力无法达到的高度。我们知道的使用人脸识别技术的应用有很多，并且用户体验度良好，使用方便，比如阿里巴巴旗下的支付宝，它支持人脸识别的登录方式，操作简单方便，广受用户喜欢。使用人脸识别技术的还有苹果公司新推出的最新款苹果手机iPhone X，它放弃了之前一直沿用的指纹识别技术来解锁、支付等应用，而使用了人脸识别技术来将指纹识别替换，一时间该应用在互联网上引起了广大用户以及科技工作者的讨论。除此之外，还有许多的场景都使用了人脸识别技术，比如各大银行的自助终端机，一些大城市的“刷脸考试”、“刷脸公证”更是已经运用多年，可以说，人脸识别技术正在逐步取代传统的身份认证方式，将不断地走入人们的生活。
<br>
  <br>
<span style="margin-left:25px"></span> 1.3 主要研究内容
<br>
  <br>
<span style="margin-left:25px"></span> 1.3.1 研究内容
<br>
  <br>
<span style="margin-left:25px"></span> 人脸识别是本系统的一大难点，同时也是一大亮点，做好了可以起到加分的效果，因此，此次毕业设计的主要研究的内容即是人脸识别的实现，将人脸识别应用到超市收银系统中，作为用户使用超市收银系统的身份认证方式确保超市财务信息的安全性。
<br>
  <br>
<span style="margin-left:25px"></span> 用户可以方便的使用人脸识别登录的方式进入系统，并且收银员可以使用扫码枪或者输入商品条形码数字的方式获取商品的信息，并根顾客所购买商品的数量以及单价计算出总价，然后依据该顾客是否是会员，可否打折，计算出应付的金钱数额进行结账，超市的管理人员还可以使用系统的后台统计功能查看超市的营业情况。后台的统计功能呈现数据的方式可以使表格形式，也可以是图形化的形式。
<br>
  <br>
<span style="margin-left:25px"></span> 超市收银系统还支持会员卡打折和积分的功能，开通了会员的用户在购买商品结账时，可以向超市收银员报上手机号，超市收银员输入手机号查询，如果查询用户的手机号确实是会员账号，可以给用户购买的商品一定的折扣价，并且根据相应的规则增加相应的积分。
<br>
  <br>
<span style="margin-left:25px"></span> 1.3.2 研究重点
<br>
  <br>
<span style="margin-left:25px"></span> 超市收银系统项目使用spring+springMVC+mybatis作为开发框架，并使用maven作为项目的构建工具。使用SSM+maven作为项目的开发技术，可以降低编码的复杂度，提高编码的效率，让代码更加优美，更加易读。因此，spring、springMVC和mybatis三大框架的整合搭建是本次项目的首要重点任务。
<br>
  <br>
<span style="margin-left:25px"></span> 由于在超市收银系统的使用人员中有不同的角色，如何限制不同的角色有何种权限使用何种系统功能，在系统中加入Apache shiro安全框架作为限制用户使用功能的认证方式。这就需要掌握如何将Apache shiro安全框架整合到SSM三大框架中，掌握Apache shiro是如何对用户进行认证和授权的。
<br>
  <br>
<span style="margin-left:25px"></span> 人脸识别功能需要将屏幕中带有待验证用户的人脸照片通过后台代码传输到百度云中与百度云上已注册的人脸库做对比验证，因此，后台代码怎么样才能够获取到前端页面的图像也将是一个技术难点，需要多花时间着重研究。
<br>
  <br>
<span style="margin-left:25px"></span> 2  需求分析
<br>
  <br>
<span style="margin-left:25px"></span> 2.1 功能需求分析
<br>
  <br>
<span style="margin-left:25px"></span> 系统主要分为以下几大功能模块：
<br>
  <br>
<span style="margin-left:25px"></span> 用户登录模块：刷脸登录、账号密码登录；
<br>
  <br>
<span style="margin-left:25px"></span> 前台收银模块：POS收银；
<br>
  <br>
<span style="margin-left:25px"></span> 商品销售模块：添加会员、查询修改删除会员；
<br>
  <br>
<span style="margin-left:25px"></span> 商品库存模块：查询商品信息；
<br>
  <br>
<span style="margin-left:25px"></span> 营业统计模块：营业数据图形化、销售情况查询；
<br>
  <br>
<span style="margin-left:25px"></span> 人事管理模块：添加员工、查询修改删除员工信息。
<br>
  <br>
<span style="margin-left:25px"></span> 功能模块如图2-1：
<br>
  <br>
<span style="margin-left:25px"></span> 图2-1 系统功能模块图
<br>
  <br>
<span style="margin-left:25px"></span> 系统开发的主要目标是能够做到以下几点：
<br>
  <br>
<span style="margin-left:25px"></span>  用户可以使用刷脸登录和账号密码登录两种方式登录系统
<br>
  <br>
<span style="margin-left:25px"></span>  会员用户在购买商品时可以享受一定的优惠价格和积分
<br>
  <br>
<span style="margin-left:25px"></span>  超市收银员能够使用扫码枪或者手动输入商品条形码数字的方式获取商品信息，然后计算出此次顾客所购买的商品的总价
<br>
  <br>
<span style="margin-left:25px"></span>  超市管理者可以查看销售相关的统计数据
<br>
  <br>
<span style="margin-left:25px"></span>  提高数据访问安全性，在系统中加入身份验证以及角色管理功能，完善权限分配机制
<br>
  <br>
<span style="margin-left:25px"></span> 超市收银系统的开发语言选用的是Java，而Java应用程序需要在Java虚拟机上运行的。客户端使用的是电脑浏览器，电脑的处理能力比较快，有可能会出现服务器没响应的情况，因此，很多数据的操作都是使用缓存技术和异步的方式实现的。
<br>
  <br>
<span style="margin-left:25px"></span> 2.2 可行性分析
<br>
  <br>
<span style="margin-left:25px"></span> 经济可行性：超市收银系统的开发与测试需要一台安装有基本Java环境的笔记本电脑，要求有JDK、编译工具eclipse、web应用服务器，由于人脸识别功能需要用到电脑摄像头进行人脸图像的获取，前台收银需要使用扫码枪。在开发与测试时，扫码枪功能部分可以使用手动输入条形码数字的方式替代，除此之外的其他条件需要一台基本配置的笔记本电脑即可，因此经济上是可行的。
<br>
  <br>
<span style="margin-left:25px"></span> 技术可行性：本次毕设超市收银系统使用的是Java作为开发语言，作为一名信息学院的学生编程是必备的技能，也开设了许多软件编程的课程，在大二大三两年开设的Java程序设计和Java web等Java方面的课程让我对Java编程有了一定的了解，并且逐渐的喜爱上它。除了学校开设的课程之外，我利用课外时间还参加了蓝桥学院的Java学习，这让我能够更加系统的学习到Java编程，对Java Web应用程序开发的知识有了更深层次的了解与掌握。在完成毕设的过程还有知识渊博的叶恒舟老师的指导和其他老师同学的帮助，所以完成此次毕设的超市收银系统从技术上完全是可行的。
<br>
  <br>
<span style="margin-left:25px"></span> 社会可行性：无论做什么事情，开发什么软件，都需要国家的保护，因此也应该遵守相应的法律。本次毕业设计的系统开发完全属于自主开发，不存在侵权、妨碍等责任问题。本系统采用的是Windows的图形用户界面，Windows系统是最流行的电脑操作系统，可以轻松上手。完成毕业设计的地点主要在学校和实习单位的工作地点，这两个地方都可以提供安全舒适的学习环境。综合以上所有社会因素，完全可行。
<br>
  <br>
<span style="margin-left:25px"></span> 2.3 开发与运行环境
<br>
  <br>
<span style="margin-left:25px"></span> 操作系统：Windows 8.1
<br>
  <br>
<span style="margin-left:25px"></span> 编译工具：eclipse、HBuilder
<br>
  <br>
<span style="margin-left:25px"></span> 数据库建模工具：Powerdesigner
<br>
  <br>
<span style="margin-left:25px"></span> 应用服务器：Tomcat 9.0
<br>
  <br>
<span style="margin-left:25px"></span> 将开发好的web应用程序部署到Tomcat服务器上以后使用Firefox，Google Chrome，IE等流行的浏览器即可访问。
<br>
  <br>
<span style="margin-left:25px"></span> 2.4 相关技术简介
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.1 Bootstrap
<br>
  <br>
<span style="margin-left:25px"></span> 在WEB应用程序发展迅速的互联网时代，一个界面友好、美观的网页不仅能够让使用者容易上手、操作方便，还可以让用户喜爱上这个应用。鉴于此，此次毕设的超市收银系统将使用Bootstrap前端框架作为JSP页面的开发组件。Bootstrap在近些年成为了开发者和用户最喜爱的前端框架之一，用它可以很容易并且快速的搭建出网站页面。Bootstrap可以根据用户屏幕尺寸调整页面，适应用户屏幕的大小，使其在各个尺寸上都表现良好。同时Bootstrap的JavaScript插件也是非常的丰富，既可以用现成的也可以自己扩充，Bootstrap提供了一个封装好的Bootstrapjs插件包，我们引入后可以很方便的使用它。而且它的JavaScript插件库优秀的地方就在于，哪怕对JavaScript不是很了解也可以很方便的使用，只要按照官方文档提供的格式写即可。
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.2 Spring
<br>
  <br>
<span style="margin-left:25px"></span> IOC作为Spring框架的核心技术之一，可以让我们在编程时更加方便的对对象进行实例化和销毁，这些操作全都交由Spring来完成，不需要自己手动操作。Spring另一个核心的技术AOP，中文全称为面向切面编程，它不同于面向对象编程，可以纵向的进行编程，在不同的模块中嵌入使用，极大的简化了代码的编写，提高代码的复用率。
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.3 SpringMVC
<br>
  <br>
<span style="margin-left:25px"></span> SpringMCV，它与Struts2的区别主要就在于SpringMVC是方法拦截的，Controller独享请求和响应数据，采用的Servlet入口，与Spring无缝对接。就开发而言，SpringMVC更加轻量，门槛低，容易上手。
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.4 Mybatis
<br>
  <br>
<span style="margin-left:25px"></span> Mybatis，说到Mybatis难免就会拿它与Hibernate进行对比，首先，Mybatis的SQL可以有开发者自由的去编写和优化，对数据库的操作更加的直观，在毕设中使用也可以让我们对数据库的知识掌握得更加的熟练。其次，Mybatis相对来说比较轻量，毕业设计开发的超市收银系统功能相对简单，对数据的操作量也比较小，不宜使用太过于庞大的框架。
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.5 Shiro
<br>
  <br>
<span style="margin-left:25px"></span> Apache Shiro，Shiro是阿帕奇旗下的一个功能强大而运用灵活的开源安全框架，能够很清楚的解决认证、授权、管理会话以及密码加密需求。Shiro与Spring Security的对比，Shiro不仅能够做到和Spring Security一样的功能强大，还具有自己在简单性和灵活性方面的优势。Shiro提供了易于理解的Java Security API，可以支持多种数据源进行简单的身份认证和授权。
<br>
  <br>
<span style="margin-left:25px"></span> 2.4.6 百度人脸识别
<br>
  <br>
<span style="margin-left:25px"></span> 百度人脸识别，百度提供的人脸识别技术可以做到高精度的1:1人脸对比服务，根据两张照片中人脸的多种特征做出相似度评分。通过提取照片中人脸的特征，计算两张人脸的相似度，判断两张人脸是不是同一个人，并给出相似度评分。除了人脸对比技术外，百度人脸识别技术还提供了人脸检测、活体检测、人脸搜索等多种非常丰富的功能供开发者选择使用。
<br>
  <br>
<span style="margin-left:25px"></span> 2.5 相关技术分析
<br>
  <br>
<span style="margin-left:25px"></span> 软件方面，使用Bootstrap前端框架最好使用Hbuilder来制作页面，它具有类似于eclipse非常智能的代码提示功能，在页面的制作过程中可以很方便的将代码放到浏览器中进行效果预览，在众多的浏览器中推荐使用Firefox，它具有功能齐全，操作方便的特点，易于对代码进行调试。后台功能的开发使用Java编程语言，最流行并且免费的IDE当然非Eclipse莫属，开发后的应用程序需要在web容器Tomcat中运行。
<br>
  <br>
<span style="margin-left:25px"></span> 硬件方面，人脸识别需要使用到摄像头，摄像头的要求不需要很高，只需要可以进行较为清晰的拍照即可，因此，笔记本自带的摄像头足以满足需求，如果是台式机，需要有一个外接的摄像头。
<br>
  <br>
<span style="margin-left:25px"></span> 3  概要设计
<br>
  <br>
<span style="margin-left:25px"></span> 3.1 数据库设计
<br>
  <br>
<span style="margin-left:25px"></span> 3.1.1 数据库表结构分析
<br>
  <br>
<span style="margin-left:25px"></span> 超市收银系统主要有以下几大实体对象：用户、角色、权限、商品、商品类别、供应商、商品销售单、商品销售单明细、会员。
<br>
  <br>
<span style="margin-left:25px"></span> （1）	用户：用户编号、用户密码、用户姓名、用户年龄、用户性别、用户电话、用户角色编号
<br>
  <br>
<span style="margin-left:25px"></span> （2）	角色：角色编号、用户职称、角色所具有的权限编号
<br>
  <br>
<span style="margin-left:25px"></span> （3）	权限：权限编号、权限名称
<br>
  <br>
<span style="margin-left:25px"></span> （4）	商品：商品编号、商品名称、商品进价、商品售价、商品单位、商品生产日期、商品有效期、商品库存量、商品供应商编号、商品生产地址、商品类别
<br>
  <br>
<span style="margin-left:25px"></span> （5）	商品类别：商品类别编号、商品类别名称
<br>
  <br>
<span style="margin-left:25px"></span> （6）	供应商：供应商编号、供应商名称、供应商地址、供应商联系人、供应商联系电话、供应商E-mail
<br>
  <br>
<span style="margin-left:25px"></span> （7）	商品销售单：销售单编号、销售单总金额、销售时间、收银员编号
<br>
  <br>
<span style="margin-left:25px"></span> （8）	商品销售单明细：销售单明细编号、商品编号、销售数量、销售单编号
<br>
  <br>
<span style="margin-left:25px"></span> （9）	会员：会员编号、会员姓名、会员积分、开户时间、会员联系方式
<br>
  <br>
<span style="margin-left:25px"></span> 根据以上分析画出系统的E-R图，如图3-1：
<br>
  <br>
<span style="margin-left:25px"></span> 图3-1 E-R图
<br>
  <br>
<span style="margin-left:25px"></span> 3.1.2 数据库表结构设计
<br>
  <br>
<span style="margin-left:25px"></span> 将E-R图转化为与之对应的数据表，分别为用户表、角色表、权限表、商品表、商品类别表、供应商表、商品销售表、商品销售明细表和会员表。表结构如下：
<br>
  <br>
<span style="margin-left:25px"></span> 表4-1 用户表T_user
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	U_id	用户编号	int	用户的唯一标识
<br>
  <br>
<span style="margin-left:25px"></span> U_pwd	用户密码	varchar(30)	字母或数字组成长度6-12
<br>
  <br>
<span style="margin-left:25px"></span> U_name	用户姓名	varchar(30)	不能有非法字符
<br>
  <br>
<span style="margin-left:25px"></span> U_age	用户年龄	int	1
<br>
  <br>
<span style="margin-left:25px"></span> U_sex 	用户性别	char(2)	男/女
<br>
  <br>
<span style="margin-left:25px"></span> U_tel		用户电话	varchar(11)	用户电话
<br>
  <br>
<span style="margin-left:25px"></span> R_id	角色编号	int	外键（角色表）
<br>
  <br>
<span style="margin-left:25px"></span> 表4-2 角色表T_role
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	R_id	角色编号	int	角色的编号
<br>
  <br>
<span style="margin-left:25px"></span> R_name	用户职称	varchar(50)	10个汉字以内
<br>
  <br>
<span style="margin-left:25px"></span> Pri_id	权限编号	int	外键（权限表）
<br>
  <br>
<span style="margin-left:25px"></span> 表4-3 权限表T_ privilege
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	Pri_id	权限编号	int
<br>
  <br>
<span style="margin-left:25px"></span> Pri_name	权限名称	varchar(50)	中文或字母
<br>
  <br>
<span style="margin-left:25px"></span> 表4-4 商品信息表T_goods
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	G_id	商品编号	int	商品编号
<br>
  <br>
<span style="margin-left:25px"></span> G_name	名称	varchar(50)
<br>
  <br>
<span style="margin-left:25px"></span> G_purchasePrice	进价	float	商品进货价格
<br>
  <br>
<span style="margin-left:25px"></span> G_sellingPrice	售价	float	商品售卖价格
<br>
  <br>
<span style="margin-left:25px"></span> G_unit	单位	varchar(10)	斤/个/瓶....
<br>
  <br>
<span style="margin-left:25px"></span> G_productionDate	生产日期	date	商品生产日期
<br>
  <br>
<span style="margin-left:25px"></span> G_shelfLife	有效期	varchar(10)	商品保质期
<br>
  <br>
<span style="margin-left:25px"></span> G_inventory	库存量	int	当前仓库商品存量
<br>
  <br>
<span style="margin-left:25px"></span> Pro_id	供应商编号	int	外键（供应商表）
<br>
  <br>
<span style="margin-left:25px"></span> G_productionAddress	生产地址	varchar(30)	商品的生产地址
<br>
  <br>
<span style="margin-left:25px"></span> C_id	商品类别	int	外键（商品类别表）
<br>
  <br>
<span style="margin-left:25px"></span> 表4-5 供应商信息表T_provider
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	Pro_id	供应商编号	int
<br>
  <br>
<span style="margin-left:25px"></span> Pro_name	名称	varchar(20)	供应商名称
<br>
  <br>
<span style="margin-left:25px"></span> Pro_address	地址	varchar(30)	供应商地址
<br>
  <br>
<span style="margin-left:25px"></span> Pro_contactPerson	联系人	varchar(10)	供应商联系人
<br>
  <br>
<span style="margin-left:25px"></span> Pro_tel	电话	varchar(11)	供应商联系人联系电话
<br>
  <br>
<span style="margin-left:25px"></span> Pro_email	E-mail	varchar(20)
<br>
  <br>
<span style="margin-left:25px"></span> 表4-6 商品类别表T_category
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	C_id	商品类别编号	int
<br>
  <br>
<span style="margin-left:25px"></span> C_name	商品类别名称	varchar(20)
<br>
  <br>
<span style="margin-left:25px"></span> 表4-7 商品销售单表T_saleOrder
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	S_id	销售单编号	int
<br>
  <br>
<span style="margin-left:25px"></span> S_totalAmount	总金额	float	销售订单总金额
<br>
  <br>
<span style="margin-left:25px"></span> S_saleDate	销售时间	date
<br>
  <br>
<span style="margin-left:25px"></span> U_id	收银员编号	int	外键（用户表）
<br>
  <br>
<span style="margin-left:25px"></span> 表4-8 商品销售单明细表T_saleOrderDetail
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	Sod_id	销售单明细编号	int
<br>
  <br>
<span style="margin-left:25px"></span> G_id	商品编号	int	外键（商品表）
<br>
  <br>
<span style="margin-left:25px"></span> Sod_number	销售数量	int
<br>
  <br>
<span style="margin-left:25px"></span> S_id	销售单编号	int	外键（商品销售单表）
<br>
  <br>
<span style="margin-left:25px"></span> 表4-9 会员表T_member
<br>
  <br>
<span style="margin-left:25px"></span> 主键	字段名	字段描述	数据类型	备注
<br>
  <br>
<span style="margin-left:25px"></span> 是	M_id	会员编号	int
<br>
  <br>
<span style="margin-left:25px"></span> M_name	会员姓名	varchar(10)
<br>
  <br>
<span style="margin-left:25px"></span> M_integral	会员积分	int
<br>
  <br>
<span style="margin-left:25px"></span> M_date	开户时间	varchar(20)
<br>
  <br>
<span style="margin-left:25px"></span> M_phone	联系方式	varchar(15)
<br>
  <br>
<span style="margin-left:25px"></span> 3.2 系统结构设计
<br>
  <br>
<span style="margin-left:25px"></span> 超市收银系统大致分为以下六大功能模块：用户登录模块、前台收银模块、商品销售模块、商品库存模块、营业统计模块、人事管理模块。系统功能模块的结构图如图3-3：
<br>
  <br>
<span style="margin-left:25px"></span> 图3-2 系统功能结构图
<br>
  <br>
<span style="margin-left:25px"></span> 3.3 文件结构设计
<br>
  <br>
<span style="margin-left:25px"></span> 超市收银系统创建的工程文件为FKSupermarket，主要包含有pom.xml文件用于管理项目所需的jar包、src/main/java下的Java文件、src/main/resources下的各种系统配置文件和src/main/webapp下的JSP文件。详细文件结构如图3-3：
<br>
  <br>
<span style="margin-left:25px"></span> 图3-3 文件结构
<br>
  <br>
<span style="margin-left:25px"></span> 4  详细设计与实现
<br>
  <br>
<span style="margin-left:25px"></span> 4.1 用户登录
<br>
  <br>
<span style="margin-left:25px"></span> 4.1.1 用户名密码登录
<br>
  <br>
<span style="margin-left:25px"></span> 用户在浏览器地址栏输入网址访问超市收银系统起始页面后可以看到浏览器提示是否允许该应用使用摄像头，在允许应用使用摄像头后可以看到页面右上角有两个可供选择登录系统的方式，一个是用户名密码登录，另一个是刷脸登录。点击用户登录选项后会进入到需要输入用户名和密码的页面，在数字用户名输入框内输入用户名当光标离开输入框会触发一个光标移出事件，该时间能够使用JavaScript代码检查用户名和密码是否为空、用户名是否是合法的数字以及通过AJAX异步的方式检查用户输入的用户名是否存在，如果不存在则给出相应的提示。
<br>
  <br>
<span style="margin-left:25px"></span> 在用户输入的用户名不存在或者不合法时，系统给出有好的提示功能，当用户再次将光标移动到用户名或者密码的输入框是，也会出发一个JavaScript的获取焦点事件，该事件会将此前显示的错误提示取消，这个小功能起到了用户使用友好的效果。用户名密码登录页面效果如图4-1，登录流程如图4-2：
<br>
  <br>
<span style="margin-left:25px"></span> 图4-1 用户名密码登录页面
<br>
  <br>
<span style="margin-left:25px"></span> 图4-2 登录流程
<br>
  <br>
<span style="margin-left:25px"></span> 光标移出事件代码：
<br>
  <br>
<span style="margin-left:25px"></span> function ajaxExce() {
<br>
  <br>
<span style="margin-left:25px"></span> var username = document.getElementById("username").value;
<br>
  <br>
<span style="margin-left:25px"></span> var password = document.getElementById("password").value;
<br>
  <br>
<span style="margin-left:25px"></span> var usernameReg=new RegExp("^[0-9]{1,11}$");
<br>
  <br>
<span style="margin-left:25px"></span> var passwordReg=new RegExp("^[A-Za-z0-9]{1,30}$");
<br>
  <br>
<span style="margin-left:25px"></span> if (username == "") {
<br>
  <br>
<span style="margin-left:25px"></span> // 用户名非空验证
<br>
  <br>
<span style="margin-left:25px"></span> $("#login_warning").html("^font color='red'^用户名不能为空！^/font^");
<br>
  <br>
<span style="margin-left:25px"></span> return false;
<br>
  <br>
<span style="margin-left:25px"></span> } else if(password == ""){
<br>
  <br>
<span style="margin-left:25px"></span> // 密码非空验证
<br>
  <br>
<span style="margin-left:25px"></span> $("#login_warning").html("^font color='red'^密码不能为空！^/font^");
<br>
  <br>
<span style="margin-left:25px"></span> return false;
<br>
  <br>
<span style="margin-left:25px"></span> } else if(!usernameReg.test(username)){
<br>
  <br>
<span style="margin-left:25px"></span> // 用户名数字验证
<br>
  <br>
<span style="margin-left:25px"></span> $("#login_warning").html("^font color='red'^不合法用户名！^/font^");
<br>
  <br>
<span style="margin-left:25px"></span> return false;
<br>
  <br>
<span style="margin-left:25px"></span> } else if(!passwordReg.test(password)){
<br>
  <br>
<span style="margin-left:25px"></span> // 密码合法验证（字母、数字、下划线）
<br>
  <br>
<span style="margin-left:25px"></span> $("#login_warning").html("^font color='red'^不合法密码！^/font^");
<br>
  <br>
<span style="margin-left:25px"></span> return false;
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> $.ajax({
<br>
  <br>
<span style="margin-left:25px"></span> method : "POST",
<br>
  <br>
<span style="margin-left:25px"></span> url :"${pageContext.request.contextPath }/
<br>
  <br>
<span style="margin-left:25px"></span> UserController/checkUserID.action",
<br>
  <br>
<span style="margin-left:25px"></span> data : {
<br>
  <br>
<span style="margin-left:25px"></span> username : username
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> }).done(function(msg) {
<br>
  <br>
<span style="margin-left:25px"></span> var jsonObj = JSON.parse(msg);
<br>
  <br>
<span style="margin-left:25px"></span> if (jsonObj == true) {
<br>
  <br>
<span style="margin-left:25px"></span> $("#login_warning").html("^font color='red'^^/font^");
<br>
  <br>
<span style="margin-left:25px"></span> return true;
<br>
  <br>
<span style="margin-left:25px"></span> } else {
<br>
  <br>
<span style="margin-left:25px"></span> $("#login_warning").html("^font color='red'^用户名不存在！^/font^");
<br>
  <br>
<span style="margin-left:25px"></span> return false;
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> 4.1.2 刷脸登录
<br>
  <br>
<span style="margin-left:25px"></span> 如果选择刷脸登录选项，进入到页面会发现页面有两个方框，一个是实时显示电脑摄像头拍摄到的画面，一个是点击拍照按钮后所拍得照片的预览效果，用户可以根据照片中自身的人脸效果决定是否使用该照片来作为人脸识别登录的对比照片，如果需要重新拍照获取，则再次点击拍照按钮即可。拍摄好照片后即可点击登录按钮，这里使用的也是AJAX异步的方式将图像上传到后台，后台代码将获取到的图像保存到本地。
<br>
  <br>
<span style="margin-left:25px"></span> 在将图像传到百度与做人脸比对之前需要将在百度上注册获取到的APP_ID、API_KEY、SECRET_KEY作为参数初始化一个FaceClient，设计一些可选的网络连接参数。人脸识别接口还需要指定要计算图片与组内各用户相似度（可指定多组）和返回用户的前几个人脸（默认为1）作为接口参数。人脸识别接口会返回含有识别结果的JSON数据，我们可以通过JSON解析获取识别结果，其中包含有相似度评分、用户ID、组ID和用户信息，接着就可以判断相似度评分是否满足自己设定的阈值来决定用户识别登录是否成功，在这里我们设定的阈值为80。刷脸登录页面效果如图4-3，流程如图4-4：
<br>
  <br>
<span style="margin-left:25px"></span> 图4-3 刷脸登录页面
<br>
  <br>
<span style="margin-left:25px"></span> 图4-4 刷脸登录流程
<br>
  <br>
<span style="margin-left:25px"></span> 刷脸登录关键代码：
<br>
  <br>
<span style="margin-left:25px"></span> function convertCanvasToImage() {
<br>
  <br>
<span style="margin-left:25px"></span> var pic = document.getElementById("canvas").toDataURL("image/png");
<br>
  <br>
<span style="margin-left:25px"></span> pic = pic.replace(/^data:image\/(png|jpg);base64,/, "");
<br>
  <br>
<span style="margin-left:25px"></span> $.ajaxFileUpload({
<br>
  <br>
<span style="margin-left:25px"></span> url : 'FaceServlet',
<br>
  <br>
<span style="margin-left:25px"></span> data : {
<br>
  <br>
<span style="margin-left:25px"></span> imageData : pic
<br>
  <br>
<span style="margin-left:25px"></span> },
<br>
  <br>
<span style="margin-left:25px"></span> dataType : 'JSON',
<br>
  <br>
<span style="margin-left:25px"></span> success : function(data, status) {
<br>
  <br>
<span style="margin-left:25px"></span> var result = data.toString().substr(5, data.length - 11);
<br>
  <br>
<span style="margin-left:25px"></span> if($.trim(result) == "true"){
<br>
  <br>
<span style="margin-left:25px"></span> window.location.href="${pageContext.request.contextPath }/jsp/homePagejsp"
<br>
  <br>
<span style="margin-left:25px"></span> }else{
<br>
  <br>
<span style="margin-left:25px"></span> $("#face_warning").html("^font color='red'^登录失败！^/font^");
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> },
<br>
  <br>
<span style="margin-left:25px"></span> error : function(data, status, e) {
<br>
  <br>
<span style="margin-left:25px"></span> alert("服务器响应失败处理函数或处理后台返回数据错误");
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> 通过以上两种登录方式登录成功后即可进入到超市收银系统的后台页面，用户就可以根据需求来自行选择需要使用的功能。
<br>
  <br>
<span style="margin-left:25px"></span> 4.2 前台收银
<br>
  <br>
<span style="margin-left:25px"></span> POS收银功能主要提供给超市的收银员使用，收银员可以使用扫码枪或者直接输入商品条形码数字的方式给客户结账。在结账时还可以给会员客户提供一个会员打折价，并将多支付的金额转换成积分累计到会员积分中。
<br>
  <br>
<span style="margin-left:25px"></span> 该功能的会员积分实现方法为，jsp页面将会员手机号输入框中输入的手机号以AJAX的方式从数据库中查询是否存在该手机号码的会员，存在则在页面中显示该会员的会员积分和他可以享受的折扣。
<br>
  <br>
<span style="margin-left:25px"></span> 收银员使用扫码枪或者直接输入商品条形码数字的方式获取到是否存在该销售商品，如果数据库中存在该商品，需要再次获取商品展示区中的信息来判断是否已经展示有该商品，如果没有则直接在展示区中显示，否则需要获取到该条记录，将购买商品数量和金额进行累加。显示商品信息使用JavaScript将el表达式获取到的商品属性和HTML标签拼接，然后将拼接好的字符串添加到展示区的div标签中，在已购商品展示区中即可将该商品的主要信息显示出来。收银员录入顾客所有需要购买的商品后点击右下方的结算按钮弹出的模态框中会根据该客户是否是会员计算出此次结算的应收金额，收银员也可以输入实收金额计算出找零金额。确定结算后，使用AJAX将本次销售的所有商品信息、销售金额和收银员保存到数据库中。POS页面效果如图4-5：
<br>
  <br>
<span style="margin-left:25px"></span> 图4-5 POS页面
<br>
  <br>
<span style="margin-left:25px"></span> 在展示区添加显示商品信息主要代码：
<br>
  <br>
<span style="margin-left:25px"></span> $.ajax({
<br>
  <br>
<span style="margin-left:25px"></span> method : "post",
<br>
  <br>
<span style="margin-left:25px"></span> url :"${pageContext.request.contextPath }/
<br>
  <br>
<span style="margin-left:25px"></span> GoodsController/findGoodsById.action",
<br>
  <br>
<span style="margin-left:25px"></span> data : {
<br>
  <br>
<span style="margin-left:25px"></span> g_id : g_id
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> }).done(function(msg) {
<br>
  <br>
<span style="margin-left:25px"></span> if(msg!=null){
<br>
  <br>
<span style="margin-left:25px"></span> var jsonObj = msg;
<br>
  <br>
<span style="margin-left:25px"></span> var num = document.getElementsByName("t1");
<br>
  <br>
<span style="margin-left:25px"></span> $("#showGoods").append("^tr name='trtr' class='trtr'^^td name='t1' id='t1'^"
<br>
  <br>
<span style="margin-left:25px"></span> + (num.length + 1)
<br>
  <br>
<span style="margin-left:25px"></span> + "^/td^^td name='td2'^"
<br>
  <br>
<span style="margin-left:25px"></span> + jsonObj.g_name
<br>
  <br>
<span style="margin-left:25px"></span> + "^/td^^td name='td3'^"
<br>
  <br>
<span style="margin-left:25px"></span> + jsonObj.g_unit
<br>
  <br>
<span style="margin-left:25px"></span> + "^/td^^td name='td4'^^input type='text' id='price1-info-text'  style='background-color:black;border-color:black;border-style:solid;color:white' readonly='readonly' value="
<br>
  <br>
<span style="margin-left:25px"></span> + jsonObj.g_purchasePrice+"^"
<br>
  <br>
<span style="margin-left:25px"></span> + "^/td^^td name='td5'^^input type='text' name='int2' id='"
<br>
  <br>
<span style="margin-left:25px"></span> + jsonObj.g_id+"'style='background-color:black;border-color:black;border-style:solid;color:white' readonly='readonly' value='1'^"
<br>
  <br>
<span style="margin-left:25px"></span> + "^/td^^td name='td6'^^input type='text' id='price2-info-text'  style='background-color:black;border-color:black;border-style:solid;color:white' readonly='readonly' value="
<br>
  <br>
<span style="margin-left:25px"></span> + jsonObj.g_purchasePrice+"^"
<br>
  <br>
<span style="margin-left:25px"></span> + "^/td^^td name='td7'^"
<br>
  <br>
<span style="margin-left:25px"></span> + jsonObj.g_shelfLife
<br>
  <br>
<span style="margin-left:25px"></span> + "^/td^^input type='hidden' name='int1' value="
<br>
  <br>
<span style="margin-left:25px"></span> + jsonObj.g_id+"^^/tr^");
<br>
  <br>
<span style="margin-left:25px"></span> var sum = Number(jsonObj.g_purchasePrice);
<br>
  <br>
<span style="margin-left:25px"></span> //把NAN转成数字
<br>
  <br>
<span style="margin-left:25px"></span> //获取总金额
<br>
  <br>
<span style="margin-left:25px"></span> var price = Number($("#money-part1-2").text());
<br>
  <br>
<span style="margin-left:25px"></span> //总金额和添加的新商品价钱相加
<br>
  <br>
<span style="margin-left:25px"></span> price = price + sum;
<br>
  <br>
<span style="margin-left:25px"></span> //js中数字保留两位小数
<br>
  <br>
<span style="margin-left:25px"></span> //给总金额赋值
<br>
  <br>
<span style="margin-left:25px"></span> $("#money-part1-2").text(price.toFixed(2));
<br>
  <br>
<span style="margin-left:25px"></span> //获取模态框中的应收金额
<br>
  <br>
<span style="margin-left:25px"></span> var finalPrice = Number($("#span1").val());
<br>
  <br>
<span style="margin-left:25px"></span> //获取模态框中的实收金额
<br>
  <br>
<span style="margin-left:25px"></span> var num = $("#money-rest-son").text();
<br>
  <br>
<span style="margin-left:25px"></span> var num1 = $.trim(num);
<br>
  <br>
<span style="margin-left:25px"></span> if (num1 != null && num1 != "") {
<br>
  <br>
<span style="margin-left:25px"></span> //会员打折
<br>
  <br>
<span style="margin-left:25px"></span> finalPrice = price * 0.9;
<br>
  <br>
<span style="margin-left:25px"></span> $("#span1").val(finalPrice.toFixed(2));
<br>
  <br>
<span style="margin-left:25px"></span> } else {
<br>
  <br>
<span style="margin-left:25px"></span> //不是会员原价
<br>
  <br>
<span style="margin-left:25px"></span> finalPrice = price;
<br>
  <br>
<span style="margin-left:25px"></span> $("#span1").val(finalPrice.toFixed(2));
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> }else{
<br>
  <br>
<span style="margin-left:25px"></span> alert("无此商品");
<br>
  <br>
<span style="margin-left:25px"></span> }		});
<br>
  <br>
<span style="margin-left:25px"></span> 4.3 商品销售
<br>
  <br>
<span style="margin-left:25px"></span> 商品销售分有添加会员和查询会员两个功能，这两个功能没有设置角色权限的设置，登录超市收银系统的所有用户均可以使用。超市收银员可以在销售商品时根据顾客的意愿给想要开通会员的顾客开通会员账号，开通会员时只需要录入顾客的姓名和手机号即可，顾客再次购买商品时想收银员提供手机号即可享受会员的折扣价。由于在添加会员时输入的开户时间是一个字符串，在向数据库中添加时需要使用SimpleDateFormat日期转换工具类将日期字符串转换成Date对象才可以存入到数据库中。添加会员效果如图4-6。
<br>
  <br>
<span style="margin-left:25px"></span> 超市的所有人员均可以使用会员查询功能，进入到查询页面显示的是多有在本超市开通了会员账号的信息，包括有会员的名字、会员所具有的积分、该会员开通的时间以及电话号码，用户如果需要查询出具体的会员信息可以在条件输入框中输入查询条件进行查询，提供有可以查询条件有会员手机号和会员名称，效果如图4-7。除了可以查询会员信息外，还可以对已开通会员信息的删除和修改，点击删除链接后需要再次点击确认删除的弹框即可删除该条不需要的会员信息。会员的修改使用的是模态框来实现的，使用模态框可以在不用离开原页面的情况下层叠的显示另一个窗体，它以子窗体的形式覆盖在父窗体上，作用就是为了显示另一个单独的源的内容，可以在不离开父窗体的情况下进行一些互动，提供信息，修改会员信息如图4-8。模态框的优势众多，比如说它容易理解，模态框使用简单，是基于jQuery实现的，只需要导入jQuery的包即可使用。容易导航也是模态框的优点之一，使用它可以很快的定位到模态框的代码，方便程序员对它的使用。从用户的角度来说，使用模态框还可以丰富用户的体验，即使用户不小心打开了模态框，也可以随时点击关闭。因此，不仅仅在修改会员信息用到模态框，系统中其他多处地方也有是用。在需要修改会员信息时弹出的模态框中使用AJAX异步的方式从数据库中获取到该条会员的对象，并使用jQuery将会员信息显示在模态框中，用户根据需要修改即可。修改完会员信息之后页面将会调转到查询所有会员，用户可以再次查询，查看刚才修改的信息是否成功。修改流程图4-9：
<br>
  <br>
<span style="margin-left:25px"></span> 图4-6 添加会员
<br>
  <br>
<span style="margin-left:25px"></span> 图4-7 查询会员
<br>
  <br>
<span style="margin-left:25px"></span> 图4-8 修改会员
<br>
  <br>
<span style="margin-left:25px"></span> 图4-9 修改会员流程
<br>
  <br>
<span style="margin-left:25px"></span> 添加会员主要代码：
<br>
  <br>
<span style="margin-left:25px"></span> @RequestMapping("addMember")
<br>
  <br>
<span style="margin-left:25px"></span> public String addMember(String m_name,Integer m_integral,String m_date,String m_phone) {
<br>
  <br>
<span style="margin-left:25px"></span> SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
<br>
  <br>
<span style="margin-left:25px"></span> Date date = null;
<br>
  <br>
<span style="margin-left:25px"></span> try {
<br>
  <br>
<span style="margin-left:25px"></span> date = sdf.parse(m_date);
<br>
  <br>
<span style="margin-left:25px"></span> } catch (ParseException e) {
<br>
  <br>
<span style="margin-left:25px"></span> e.printStackTrace();
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> Member member = new Member();
<br>
  <br>
<span style="margin-left:25px"></span> member.setM_name(m_name);
<br>
  <br>
<span style="margin-left:25px"></span> member.setM_integral(m_integral);
<br>
  <br>
<span style="margin-left:25px"></span> member.setM_date(date);
<br>
  <br>
<span style="margin-left:25px"></span> member.setM_phone(m_phone);
<br>
  <br>
<span style="margin-left:25px"></span> memberService.addMember(member);
<br>
  <br>
<span style="margin-left:25px"></span> return "redirect:findAllMember.action";
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> 修改会员主要代码：
<br>
  <br>
<span style="margin-left:25px"></span> @RequestMapping("updateMember")
<br>
  <br>
<span style="margin-left:25px"></span> public String updateMember(Integer m_id2,String m_name,Integer m_integral,String m_date,String m_phone) {
<br>
  <br>
<span style="margin-left:25px"></span> SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
<br>
  <br>
<span style="margin-left:25px"></span> Date date = null;
<br>
  <br>
<span style="margin-left:25px"></span> try {
<br>
  <br>
<span style="margin-left:25px"></span> date = sdf.parse(m_date);
<br>
  <br>
<span style="margin-left:25px"></span> } catch (ParseException e) {
<br>
  <br>
<span style="margin-left:25px"></span> e.printStackTrace();
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> Member member = new Member(m_id2, m_name, m_integral, date, m_phone);
<br>
  <br>
<span style="margin-left:25px"></span> memberService.updateMember(member);
<br>
  <br>
<span style="margin-left:25px"></span> return "redirect:findAllMember.action";
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> 4.4 商品库存
<br>
  <br>
<span style="margin-left:25px"></span> 商品库存功能并没有限制可以使用该功能的员工角色，允许登录系统的所有超市员工使用该功能。商品库存功能中可以查询商品的信息，用户可以通过商品的名称查询，这个查询条件使用的是商品名称模糊查询，只要商品名称包含有用户输入的条件就是符合条件的记录效果如图4-10。在展示查询出符合条件的记录表格中还可以对数据进行删除和修改操作。进行删除操作需要再次点击确认弹框才可以将该数据删除。修改商品信息使用的是在模态框中显示该条商品的信息，实现在模态框中显示商品信息的方法是在修改的链接中将商品ID作为参数传递给后台，后台通过ID查询的方法查询到给商品信息并存入到对象中，再将这个商品对象返回给前端，前端使用jQuery根据获取到的商品对象在相应的属性输入框中显示。用户在相应的输入框中对想要修改的信息进行修改，点击确认提交即可对数据库中该商品进行修改。
<br>
  <br>
<span style="margin-left:25px"></span> 图4-10 查询商品
<br>
  <br>
<span style="margin-left:25px"></span> 查询商品关键代码：
<br>
  <br>
<span style="margin-left:25px"></span> @RequestMapping("findAllGoods")
<br>
  <br>
<span style="margin-left:25px"></span> public String findAllGoods(Model model, Integer pageNo, @RequestParam(defaultValue = "10") Integer pageSize) {
<br>
  <br>
<span style="margin-left:25px"></span> // 调用service接口获取分页结果
<br>
  <br>
<span style="margin-left:25px"></span> PagedResult^Goods^ pageResult = goodsService.findAllGoods(pageNo, pageSize);
<br>
  <br>
<span style="margin-left:25px"></span> // 保存分页结果
<br>
  <br>
<span style="margin-left:25px"></span> model.addAttribute("pagedResult", pageResult);
<br>
  <br>
<span style="margin-left:25px"></span> // 从分页结果中获取销售单数据
<br>
  <br>
<span style="margin-left:25px"></span> List^Goods^ goodsList = pageResult.getDataList();
<br>
  <br>
<span style="margin-left:25px"></span> // 保存销售单数据
<br>
  <br>
<span style="margin-left:25px"></span> model.addAttribute("goodsList", goodsList);
<br>
  <br>
<span style="margin-left:25px"></span> return "subPage/store/storeson/store_son1";
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> @Override
<br>
  <br>
<span style="margin-left:25px"></span> public PagedResult^Goods^ findAllGoods(Integer pageNo, Integer pageSize) {
<br>
  <br>
<span style="margin-left:25px"></span> pageNo = pageNo == null ? 1 : pageNo;
<br>
  <br>
<span style="margin-left:25px"></span> pageSize = pageSize == null ? 10 : pageSize;
<br>
  <br>
<span style="margin-left:25px"></span> Page pg = PageHelper.startPage(pageNo, pageSize);
<br>
  <br>
<span style="margin-left:25px"></span> PagedResult^Goods^ result = BeanUtil.toPagedResult(goodsMapper.findAllGoods());
<br>
  <br>
<span style="margin-left:25px"></span> int p = (int) result.getPages();
<br>
  <br>
<span style="margin-left:25px"></span> // 当前页码不能小于1，且不能大于总页数
<br>
  <br>
<span style="margin-left:25px"></span> if (pageNo ^= 1) {
<br>
  <br>
<span style="margin-left:25px"></span> pageNo = 1;
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> if (pageNo ^ p) {
<br>
  <br>
<span style="margin-left:25px"></span> pageNo = p;
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> Page page = PageHelper.startPage(pageNo, pageSize);
<br>
  <br>
<span style="margin-left:25px"></span> return BeanUtil.toPagedResult(goodsMapper.findAllGoods());
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> 4.5 营业统计
<br>
  <br>
<span style="margin-left:25px"></span> 由于营业统计设计到超市财务信息，因此营业统计功能仅有超市管理员可以使用，其他超市的用工想要进入访问会由shiro安全框架做出功能访问限制，并给出提示信息。
<br>
  <br>
<span style="margin-left:25px"></span> 营业统计会查出当年的月销售情况并给出图形化的数据显示，超市管理员可以选择以何种图形查看营业统计，有饼状图、折线图和柱状图，展示效果如图4-11。在系统中使用的是别人集成好的插件来做的数据图形化显示，它还有另一个功能就是可以将图形以图片的形式保存到本地，方便下次不用进入系统就可以查看。
<br>
  <br>
<span style="margin-left:25px"></span> 销售情况查询功能可以动态条件查询，提供可以查询的条件有销售单编号、销售员编号以及根据时间段查询，当在输入框中输入查询条件就可以根据所输入的条件查询，如果不输入就是查询所有的销售单信息。除了在主页面中展示的销售单的信息外，还可以点击每条销售单后面的“详细^^”查看该条销售单的销售单明细，该销售单都有哪些商品和该商品销售的数量。
<br>
  <br>
<span style="margin-left:25px"></span> 图4-11 营业数据图形化
<br>
  <br>
<span style="margin-left:25px"></span> 营业统计关键代码：
<br>
  <br>
<span style="margin-left:25px"></span> $(function() {
<br>
  <br>
<span style="margin-left:25px"></span> $("#line1").click(function() {
<br>
  <br>
<span style="margin-left:25px"></span> $("#chart_title").html("折线图");
<br>
  <br>
<span style="margin-left:25px"></span> new Chartkick.LineChart("chart", arr, {
<br>
  <br>
<span style="margin-left:25px"></span> download : true
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> $("#column1").click(function() {
<br>
  <br>
<span style="margin-left:25px"></span> $("#chart_title").html("柱状图");
<br>
  <br>
<span style="margin-left:25px"></span> new Chartkick.ColumnChart("chart", arr, {
<br>
  <br>
<span style="margin-left:25px"></span> download : true
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> $("#pie1").click(function() {
<br>
  <br>
<span style="margin-left:25px"></span> $("#chart_title").html("饼状图");
<br>
  <br>
<span style="margin-left:25px"></span> new Chartkick.PieChart("chart", arr, {
<br>
  <br>
<span style="margin-left:25px"></span> download : true
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> });
<br>
  <br>
<span style="margin-left:25px"></span> 4.6 人事管理
<br>
  <br>
<span style="margin-left:25px"></span> 人事管理分有添加员工信息和查询员工信息，只有超市管理员才可以访问，在员工类型的输入框中采用的是下拉框的形式，避免用户自己输入不合法的员工类型，也可以减少添加到数据库时的验证。系统密码、员工年龄和员工电话这三个则采用的是HTML5的新特性，在标签中加入pattern属性做为验证的参数，如果输入的数据不符合要求，在点击表单提交后会可出相应的提示。由于员工登录系统的登录名是用户表中的主键用户ID，而用户表的主键生成策略是自增长的，需要的添加完员工的信息后才可以获取到ID的数值。所以在后台代码执行完添加员工的信息后会在页面有一个弹框的提示，告知用户新添加员工登录系统的登录名。
<br>
  <br>
<span style="margin-left:25px"></span> 查询员工信息提供有根据员工编号和员工姓名的条件查询，如果条件输入框中输入有查询条件则根据条件查询，没有则全部查询。在查询出的记录表格中有可以对记录的修改和删除操作，点击删除会有一个确认操作的弹框，只有点击确认才可以删除，避免用户的无意操作造成员工信息的丢失。修改员工信息使用的是模态框的形式，点击某条员工信息后面的修改连接会弹出具有该条员工信息的模态框，用户可以根据需要对需要进行修改的条目进行修改，如图4-12。在模态框中显示对应员工的信息使用的是AJAX根据员工ID异步获取的方式，其中遇到的难点是需要将从后台中获取到员工的性别在模态框中的单选框选中对应的选项，这就需要通过jQuery的name选择器的方式获取到单选框，再判断性别选项将对应的单选框选中。
<br>
  <br>
<span style="margin-left:25px"></span> 图4-12 修改员工信息
<br>
  <br>
<span style="margin-left:25px"></span> 修改会员信息关键代码：
<br>
  <br>
<span style="margin-left:25px"></span> @RequestMapping("updateMember")
<br>
  <br>
<span style="margin-left:25px"></span> public String updateMember(Integer m_id2,String m_name,Integer m_integral,String m_date,String m_phone) {
<br>
  <br>
<span style="margin-left:25px"></span> SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
<br>
  <br>
<span style="margin-left:25px"></span> Date date = null;
<br>
  <br>
<span style="margin-left:25px"></span> try {
<br>
  <br>
<span style="margin-left:25px"></span> date = sdf.parse(m_date);
<br>
  <br>
<span style="margin-left:25px"></span> } catch (ParseException e) {
<br>
  <br>
<span style="margin-left:25px"></span> e.printStackTrace();
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> Member member = new Member(m_id2, m_name, m_integral, date, m_phone);
<br>
  <br>
<span style="margin-left:25px"></span> memberService.updateMember(member);
<br>
  <br>
<span style="margin-left:25px"></span> return "redirect:findAllMember.action";
<br>
  <br>
<span style="margin-left:25px"></span> }
<br>
  <br>
<span style="margin-left:25px"></span> 5  系统测试
<br>
  <br>
<span style="margin-left:25px"></span> 5.1 测试环境
<br>
  <br>
<span style="margin-left:25px"></span> 严格的软件开发与测试所需要的环境是不一样的，但是本次毕业设计所做的超市收银系统对环境的要求没有那么高，测试环境与开发运行环境一样即可。
<br>
  <br>
<span style="margin-left:25px"></span> 5.2 测试方法
<br>
  <br>
<span style="margin-left:25px"></span> 在测试环境运行程序后，使用不同的操作方式或者输入数据，根据输出数据发现程序的错误亦或者是不足之处，然后对结果进行评估，判断程序的运行结果是否达到预期想要的效果。
<br>
  <br>
<span style="margin-left:25px"></span> 5.3 测试用例
<br>
  <br>
<span style="margin-left:25px"></span> 对超市收银系统主要功能的测试结果如表5-1所示：
<br>
  <br>
<span style="margin-left:25px"></span> 表5-1 系统功能测试
<br>
  <br>
<span style="margin-left:25px"></span> 功能	预期结果	实际结果	是否通过
<br>
  <br>
<span style="margin-left:25px"></span> 刷脸登录	使用刷脸的方式登录系统	成功登录	是
<br>
  <br>
<span style="margin-left:25px"></span> 账号密码登录	使用中号密码登录系统	成功登录	是
<br>
  <br>
<span style="margin-left:25px"></span> POS收银	收银员根据客户所要购买的商品进行信息录入，并进行会员身份认证，然后结账	会员用户享受会员折扣结账，非会员用户按照商品原价结账	值
<br>
  <br>
<span style="margin-left:25px"></span> 添加会员	将输入的会员信息添加到数据库的会员信息表中	会员信息成功添加	是
<br>
  <br>
<span style="margin-left:25px"></span> 查询会员	将会员信息表中的所有会员信息已分页的形式显示	分页显示所有会员信息	是
<br>
  <br>
<span style="margin-left:25px"></span> 商品查询
<br>
  <br>
<span style="margin-left:25px"></span> 根据商品名称模糊查询商品信息
<br>
  <br>
<span style="margin-left:25px"></span> 成功显示包含有输入商品名字的所有商品	是
<br>
  <br>
<span style="margin-left:25px"></span> 商品删除	将某条商品信息删除	该条商品信息从表中成功删除	是
<br>
  <br>
<span style="margin-left:25px"></span> 商品修改	对商品的某个或多个信息进行修改	成功将商品的信息进行修改	是
<br>
  <br>
<span style="margin-left:25px"></span> 营业统计	将超市某年的销售情况以图形化的形式显示	只能进行当年的数据展示	是
<br>
  <br>
<span style="margin-left:25px"></span> 销售情况查询	可以进行动态条件的查询销售订单	按照输入的条件查询到符合的记录	是
<br>
  <br>
<span style="margin-left:25px"></span> 添加员工	将输入的员工信息添加到数据库的用户表中	用户表中查看到添加的员工信息	是
<br>
  <br>
<span style="margin-left:25px"></span> 查询员工	按照包括员工编号和姓名在内的条件进行动态条件查询	查询到多有符合条件的员工信息	是
<br>
  <br>
<span style="margin-left:25px"></span> 删除员工信息	将某条员工信息进行删除	选中的员工信息成功删除	是
<br>
  <br>
<span style="margin-left:25px"></span> 修改员工信息	根据需求修改员工信息	将某条员工信息成功修改	是
<br>
  <br>
<span style="margin-left:25px"></span> 6  总结与展望
<br>
  <br>
<span style="margin-left:25px"></span> 毕业设计和论文初稿终于在今天完成了，一时感慨万千。从上学期的毕设选题，到生产实习完成的部分共能，到开题答辩，再到系统的完善和论文的撰写，这期间既有在学校没课相对空闲的时间，也有在公司实习早出晚归的忙碌，但是无论是空闲还是忙碌，有一件事情永远是放在第一位的，那就是毕业设计。空闲时每天拿出固定的时间去继续未完成的任务，在公司实习即使是压力倍增，可以做毕设的时间骤减，也还是会拿出下班休息的时间来保持进度。在完成毕设的过程中虽然艰苦，困难重重，但是锻炼了我长期坚持完成一个任务的耐心与能力，收获良多。
<br>
  <br>
<span style="margin-left:25px"></span> 这次所做的超市系统虽然功能比较少，许多人也曾经做过类似的题目，但是我在系统中加入的人脸识别登录功能依旧会是一个亮点，在人工智能火爆的今天，人脸识别一直都是一个热门的研究对象。由于种种条件的限制，国家相关法律法规对个人金钱支付的使用以及技术条件的欠缺，也许将人脸识别用在登录部分没有能够将它应用到支付功能中会显得逊色几分，但是能够从无到有的突破对于我来说也是一个不小的成就，对我将来在学习路上的激励，促使我不断的学习前进，学习永无尽头。
<br>
  <br>
<span style="margin-left:25px"></span> 这次的毕业设计对我的软件编程之路来说具有重要的纪念意义，是我独自一人完成的整个系统，让我明白编程也是需要一步一步完成，一个一个小的功能组合成一个完善的模块。临近毕业季，心中有诸多对校园生活的不舍，但是走出社会可以让我学会承担更多的责任与担当，成长成一个真正对社会有贡献的人。在学校的这些年中也对编程的喜爱程度不断地加深，毕业之后也将从事软件编程的工作，我相信代码可以改变生活，I will always enjoy my coding life。
<br>
  <br>
<span style="margin-left:25px"></span> 致  谢
<br>
  <br>
<span style="margin-left:25px"></span> 经过五个月的努力，我终于完成了毕业设计系统的实现与测试以及毕业论文的撰写。本次毕业设计对我来说具有许多从未挑战的东西，从没有独自完成如此大的项目。此次毕业设计能够顺利完成，首先非常感谢的就是我的指导老师，信息科学与工程学院的叶恒舟老师的耐心指导。从最开始的选题到后来的开题答辩等事项，再到现在的论文撰写与修改，叶老师都不厌其烦的对我遇到的问题耐心解答，给出了很多具有实质性的意见与建议，让我在解决问题的时候少走了不少弯路，节省了很多时间，能够将更多的时间和精力投入到毕业设计的实现中。
<br>
  <br>
<span style="margin-left:25px"></span> 最后，衷心的感谢桂林理工大学这四年对我的培养与教育，将我从一个懵懂的高中生养育成了一个对社会有用的人才。
<br>
  <br>
<span style="margin-left:25px"></span> 参考文献
<br>
  <br>
<span style="margin-left:25px"></span> [1] 耿祥义, 张跃平. Java程序设计实用教程（第2版）[M]．北京：人民邮电出版社，2013．
<br>
  <br>
<span style="margin-left:25px"></span> [2] 张继军，董卫. Java Web应用开发技术与案例教程[M]．北京：机械工业出版社，2013.9.
<br>
  <br>
<span style="margin-left:25px"></span> [3] 宋娟. Java 常用算法手册（第3版）[M]．北京：中国铁道出版社，2016.5.
<br>
  <br>
<span style="margin-left:25px"></span> [4] 杨克昌.计算机常用算法与程序设计案例教程[M]．北京：清华大学出版社，2011.7.
<br>
  <br>
<span style="margin-left:25px"></span> [5] 陆惠恩. 实用软件工程（第3版）[M]．北京：清华大学出版社，2015.
<br>
  <br>
<span style="margin-left:25px"></span> [6] 王飞飞，崔洋，贺亚茹. MySQL数据库应用从入门到精通（第二版）[M]．北京：中国铁道出版社，2014.4.
<br>
  <br>
<span style="margin-left:25px"></span> [7] Robert L.Kruse，Alexander J.Ryba. 数据结构与程序设计[M]．北京：高等教育出版社，2001.
<br>
  <br>
<span style="margin-left:25px"></span> [8] Cay S.Horstmann. Java核心技术卷II：高级特性[M]．北京：机械工业出版社，2017.9.
<br>
  <br>
<span style="margin-left:25px"></span> [9] 吴翰清. 白帽子讲Web安全（纪念版）[M]．北京：电子工业出版社，2014.6.
<br>
  <br>
<span style="margin-left:25px"></span> [10] Bruce Eckel. Java编程思想（第4版）[M]．北京：机械工业出版社，2007.6.
<br>
  <br>
<span style="margin-left:25px"></span> [11]（美）福达. SQL必知必会（第4版）[M]．北京：人民邮电出版社，2013.5
<br>
  <br>
<span style="margin-left:25px"></span> [12] 郑步芹，姜利群，张瑜慧. 基于 SSH 的网上超市系统的研究[J]．电脑知识与技术，2009，5 （35）：9957-9959
<br>
  <br>
<span style="margin-left:25px"></span> [13] 刘邦凯.超市系统前端收银软件设计与实现[D].成都：电子科技大学，2016.12：1-72.
<br>
  <br>
<span style="margin-left:25px"></span> [14] 王双波.基于JSP的网上图书超市系统的设计与实现[D].哈尔滨：哈尔滨工业大学，2015.10：1-69.
<br>
</div>

<div style="margin-bottom:100px"></div>
</body>
</html>
